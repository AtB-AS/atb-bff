swagger: '2.0'
info:
  title: atb-bff
  description: ATB BFF
  version: 1.0.0
host: atb-bff-prod-jlmnrncfba-ew.a.run.app
schemes:
  - https
produces:
  - application/json
x-google-backend:
  address: https://atb-bff-prod-jlmnrncfba-ew.a.run.app
  path_translation: APPEND_PATH_TO_ADDRESS
paths:
  '/bff/v1/departures':
    get:
      summary: Find departures between stop places
      operationId: getBffV1Departures
      parameters:
        - type: string
          name: from
          in: query
          required: true
        - type: string
          name: to
          in: query
          required: true
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/departures-realtime':
    get:
      summary:
        Get updated realtime information of all lines and quays passed as data
      operationId: getBffV1Departuresrealtime
      parameters:
        - type: array
          items:
            type: string
          collectionFormat: multi
          name: quayIds
          in: query
        - type: string
          format: date
          name: startTime
          in: query
        - type: number
          default: 5
          name: limit
          in: query
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/stops':
    get:
      summary: Find stops matching query
      operationId: getBffV1Stops
      parameters:
        - type: string
          name: query
          in: query
          required: true
        - type: number
          name: lat
          in: query
        - type: number
          name: lon
          in: query
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/agent/next-departure-between':
    get:
      summary: Get next departures between stops
      operationId: getBffV1AgentNextdeparturebetween
      parameters:
        - type: string
          name: from
          in: query
          required: true
        - type: string
          name: to
          in: query
          required: true
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/agent/next-departure-between-nearest':
    get:
      operationId: getBffV1AgentNextdeparturebetweennearest
      parameters:
        - type: string
          name: to
          in: query
          required: true
        - type: string
          name: lat
          in: query
          required: true
        - type: string
          name: lon
          in: query
          required: true
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/departures/nearest':
    get:
      summary:
        'Get departures from stops near coordinates. Deprecated: Use POST
        /v1/departures-from-location instead'
      operationId: getBffV1DeparturesNearest
      parameters:
        - type: number
          name: lat
          in: query
          required: true
        - type: number
          name: lon
          in: query
          required: true
        - type: number
          default: 60000
          name: offset
          in: query
        - type: number
          default: 1.3
          name: walkSpeed
          in: query
        - type: boolean
          default: false
          name: includeIrrelevant
          in: query
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
      deprecated: true
  '/bff/v1/geocoder/features':
    get:
      summary: Find features matching query
      operationId: getBffV1GeocoderFeatures
      parameters:
        - type: string
          name: query
          in: query
          required: true
        - type: number
          name: lon
          in: query
        - type: number
          name: lat
          in: query
        - type: string
          name: layers
          in: query
        - type: number
          name: boundary.rect.min_lat
          in: query
        - type: number
          name: boundary.rect.max_lat
          in: query
        - type: number
          name: boundary.rect.min_lon
          in: query
        - type: number
          name: boundary.rect.max_lon
          in: query
        - type: string
          name: country
          in: query
        - type: string
          name: sources
          in: query
        - type: number
          name: limit
          in: query
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/geocoder/reverse':
    get:
      summary: Find addresses, POIs and stop places near the given coordinates
      operationId: getBffV1GeocoderReverse
      parameters:
        - type: number
          name: lat
          in: query
          required: true
        - type: number
          name: lon
          in: query
          required: true
        - type: string
          name: layers
          in: query
        - type: number
          name: radius
          in: query
        - type: number
          name: limit
          in: query
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/journey/single-trip':
    get:
      summary: Get one specific trip pattern from generated ID
      operationId: getBffV1JourneySingletrip
      parameters:
        - type: string
          name: id
          in: query
          required: true
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/journey/trip':
    get:
      summary: Find trip patterns with a simple query
      operationId: getBffV1JourneyTrip
      parameters:
        - type: string
          name: from
          in: query
          required: true
        - type: string
          name: to
          in: query
          required: true
        - type: string
          format: date
          name: when
          in: query
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
    post:
      summary: Find trip patterns
      operationId: postBffV1JourneyTrip
      parameters:
        - in: body
          name: body
          schema:
            '$ref': '#/definitions/Model2'
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/stop/{id}':
    get:
      summary: Get details for a StopPlace
      operationId: getBffV1StopId
      parameters:
        - type: string
          name: id
          in: path
          required: true
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/stops/nearest':
    get:
      summary: Find stops near coordinates
      operationId: getBffV1StopsNearest
      parameters:
        - type: number
          name: lat
          in: query
          required: true
        - type: number
          name: lon
          in: query
          required: true
        - type: number
          name: distance
          in: query
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/quay/{id}/departures':
    get:
      summary: Get departures from Quay
      operationId: getBffV1QuayIdDepartures
      parameters:
        - type: string
          name: id
          in: path
          required: true
        - type: string
          format: date
          name: start
          in: query
        - type: number
          name: timeRange
          in: query
        - type: number
          name: limit
          in: query
        - type: boolean
          name: includeNonBoarding
          in: query
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/servicejourney/{id}/departures':
    get:
      summary: Get departures for Service Journey
      operationId: getBffV1ServicejourneyIdDepartures
      parameters:
        - type: string
          name: id
          in: path
          required: true
        - type: string
          format: date
          name: date
          in: query
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/stop/{id}/departures':
    get:
      summary:
        'Get departures from StopPlace. Deprecated: Use POST
        /v1/departures-from-location instead'
      operationId: getBffV1StopIdDepartures
      parameters:
        - type: string
          name: id
          in: path
          required: true
        - type: string
          format: date
          name: start
          in: query
        - type: number
          name: timeRange
          in: query
        - type: number
          name: limit
          in: query
        - type: boolean
          name: includeNonBoarding
          in: query
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
      deprecated: true
  '/bff/v1/stop/{id}/quays':
    get:
      summary: Get all quays that belongs to a StopPlace
      operationId: getBffV1StopIdQuays
      parameters:
        - type: string
          name: id
          in: path
          required: true
        - type: boolean
          default: false
          name: filterByInUse
          in: query
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/departures-from-location':
    post:
      summary: Get departures from feature location
      operationId: postBffV1Departuresfromlocation
      parameters:
        - type: number
          default: 5
          name: limit
          in: query
        - type: boolean
          default: false
          name: includeNonBoarding
          in: query
        - type: number
          default: 60000
          name: offset
          in: query
        - type: number
          default: 1.3
          name: walkSpeed
          in: query
        - in: body
          name: body
          schema:
            '$ref': '#/definitions/Model1'
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful

  '/bff/v1/departures-from-location-paging':
    post:
      summary: Get departures from feature location
      operationId: postBffV1Departuresfromlocationpaging
      parameters:
        - type: number
          default: 5
          name: limit
          in: query
        - type: string
          format: date
          name: startTime
          in: query
        - type: number
          default: 10
          name: pageSize
          in: query
        - type: number
          default: 0
          name: pageOffset
          in: query
        - type: number
          description: Deprecated
          default: 60000
          name: offset
          in: query
        - type: number
          description: Deprecated
          default: 1.3
          name: walkSpeed
          in: query
        - in: body
          name: body
          schema:
            '$ref': '#/definitions/Model1'
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
  '/bff/v1/enrollment/group':
    post:
      summary: Enroll in beta groups with invite key
      operationId: postBffV1EnrollmentGroup
      parameters:
        - type: string
          name: inviteKey
          in: query
          required: true
      tags:
        - bff
      responses:
        default:
          schema:
            type: string
          description: Successful
definitions:
  coordinates:
    type: object
    properties:
      longitude:
        type: number
      latitude:
        type: number
  Model1:
    type: object
    properties:
      layer:
        type: string
      id:
        type: string
      coordinates:
        '$ref': '#/definitions/coordinates'
  from:
    type: object
    properties:
      place:
        type: string
      name:
        type: string
        default: UNKNOWN
      coordinates:
        '$ref': '#/definitions/coordinates'
  modes:
    type: array
    default:
      - foot
      - bus
      - tram
      - rail
      - metro
      - water
      - air
    items:
      type: string
  Model2:
    type: object
    properties:
      from:
        '$ref': '#/definitions/from'
      to:
        '$ref': '#/definitions/from'
      searchDate:
        type: string
        format: date
      arriveBy:
        type: boolean
        default: false
      minimumTransferTime:
        type: number
        default: 30
      modes:
        '$ref': '#/definitions/modes'
      limit:
        type: number
        default: 10
      wheelchairAccessible:
        type: boolean
        default: false
    required:
      - from
      - to
